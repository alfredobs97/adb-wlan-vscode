{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts","../external \"vscode\"",".././src/functions.ts","../external \"child_process\"",".././src/exceptions.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ipDevice","context","connect","vscode","commands","registerCommand","functions","checkIfAdbExist","window","showInputBox","prompt","NotValidIp","connectToHost","showInformationMessage","error","NotAdbFound","showErrorMessage","NotPortCreated","message","NotConnected","disconnect","disconnectToHost","catch","err","subscriptions","push","require","Promise","resolve","reject","exec","stdout","stedrr","createPort","ip","Error","NotDisconnected"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as vscode from 'vscode';\nimport * as functions from './functions';\nimport {\n  NotAdbFound,\n  NotPortCreated,\n  NotValidIp,\n  NotConnected,\n} from './exceptions';\n\nlet ipDevice: string;\n\nexport function activate(context: vscode.ExtensionContext) {\n  let connect = vscode.commands.registerCommand(\n    'adb-wlan.connect',\n    async () => {\n      try {\n        await functions.checkIfAdbExist;\n\n        ipDevice = (await vscode.window.showInputBox({\n          prompt: 'Enter your phone ip',\n        })) as string;\n\n        if (!ipDevice) {\n          throw NotValidIp;\n        }\n\n        await functions.connectToHost(ipDevice);\n\n        vscode.window.showInformationMessage(`Deviced ${ipDevice} connected!`);\n\n        \n      } catch (error) {\n        if (error instanceof NotAdbFound) {\n          vscode.window.showErrorMessage('ERROR, ADB not found!');\n        }\n        if (error instanceof NotPortCreated) {\n          vscode.window.showErrorMessage(\n            `NOT POSSIBLE CREATE PORT ${error.message}`\n          );\n        }\n        if (error instanceof NotValidIp) {\n          vscode.window.showErrorMessage(`ENTER A VALID IP`);\n        }\n        if (error instanceof NotConnected) {\n          vscode.window.showErrorMessage(\n            `NOT POSSIBLE CONNECT ${error.message}`\n          );\n        }\n      }\n    }\n  );\n\n  let disconnect = vscode.commands.registerCommand(\n    'adb-wlan.disconnect',\n    async () => {\n      await functions\n        .disconnectToHost(ipDevice)\n        .catch((err) =>\n          vscode.window.showErrorMessage(`NOT POSSIBLE DISCONNECT ${err}`)\n        );\n      vscode.window.showInformationMessage(`Device ${ipDevice} disconnected`);\n    }\n  );\n\n  context.subscriptions.push(connect);\n  context.subscriptions.push(disconnect);\n}\n\nexport async function deactivate() {}\n","module.exports = require(\"vscode\");","import { exec } from 'child_process';\nconst PORT = 5555;\n\nexport const checkIfAdbExist = new Promise((resolve, reject) => {\n  exec('adb version', (err, stdout, stedrr) => {\n    if (err) {\n      reject(err);\n    }\n    resolve();\n  });\n});\n\nexport const createPort = new Promise((resolve, reject) => {\n  exec(`adb tcpip ${PORT}`, (err, stdout, stedrr) => {\n    if (err) {\n      reject(err);\n    }\n    resolve();\n  });\n});\n\nexport function connectToHost(ip: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    exec(`adb connect ${ip}:${PORT}`, (err, stdout, stedrr) => {\n      if (err) {\n        reject(err);\n      }\n      resolve();\n    });\n  });\n}\n\nexport function disconnectToHost(ip: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    exec(`adb disconnect ${ip}:${PORT}`, (err, stdout, stedrr) => {\n      if (err) {\n        reject(err);\n      }\n      resolve();\n    });\n  });\n}\n","module.exports = require(\"child_process\");","export class NotAdbFound extends Error {}\n\nexport class NotPortCreated extends Error {}\n\nexport class NotValidIp extends Error {}\n\nexport class NotConnected extends Error {}\n\nexport class NotDisconnected extends Error {}\n"],"sourceRoot":""}