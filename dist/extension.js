module.exports=function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";var n=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(r,c){function i(e){try{d(n.next(e))}catch(e){c(e)}}function s(e){try{d(n.throw(e))}catch(e){c(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,s)}d((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.deactivate=t.activate=void 0;const r=o(1),c=o(2),i=o(4);let s;t.activate=function(e){let t=r.commands.registerCommand("adb-wlan.connect",()=>n(this,void 0,void 0,(function*(){try{if(yield c.checkIfAdbExist,s=yield r.window.showInputBox({prompt:"Enter your phone ip"}),!s)throw i.NotValidIp;yield c.connectToHost(s),r.window.showInformationMessage(`Deviced ${s} connected!`)}catch(e){e instanceof i.NotAdbFound&&r.window.showErrorMessage("ERROR, ADB not found!"),e instanceof i.NotPortCreated&&r.window.showErrorMessage("NOT POSSIBLE CREATE PORT "+e.message),e instanceof i.NotValidIp&&r.window.showErrorMessage("ENTER A VALID IP"),e instanceof i.NotConnected&&r.window.showErrorMessage("NOT POSSIBLE CONNECT "+e.message)}}))),o=r.commands.registerCommand("adb-wlan.disconnect",()=>n(this,void 0,void 0,(function*(){yield c.disconnectToHost(s).catch(e=>r.window.showErrorMessage("NOT POSSIBLE DISCONNECT "+e)),r.window.showInformationMessage(`Device ${s} disconnected`)})));e.subscriptions.push(t),e.subscriptions.push(o)},t.deactivate=function(){return n(this,void 0,void 0,(function*(){}))}},function(e,t){e.exports=require("vscode")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.disconnectToHost=t.connectToHost=t.createPort=t.checkIfAdbExist=void 0;const n=o(3);t.checkIfAdbExist=new Promise((e,t)=>{n.exec("adb version",(o,n,r)=>{o&&t(o),e()})}),t.createPort=new Promise((e,t)=>{n.exec("adb tcpip 5555",(o,n,r)=>{o&&t(o),e()})}),t.connectToHost=function(e){return new Promise((t,o)=>{n.exec(`adb connect ${e}:5555`,(e,n,r)=>{e&&o(e),t()})})},t.disconnectToHost=function(e){return new Promise((t,o)=>{n.exec(`adb disconnect ${e}:5555`,(e,n,r)=>{e&&o(e),t()})})}},function(e,t){e.exports=require("child_process")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NotDisconnected=t.NotConnected=t.NotValidIp=t.NotPortCreated=t.NotAdbFound=void 0;class n extends Error{}t.NotAdbFound=n;class r extends Error{}t.NotPortCreated=r;class c extends Error{}t.NotValidIp=c;class i extends Error{}t.NotConnected=i;class s extends Error{}t.NotDisconnected=s}]);
//# sourceMappingURL=extension.js.map